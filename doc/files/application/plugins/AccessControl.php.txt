<?php
/**
 * core class for authentication and setting the new identity 
 * 
 * @author Andreas Ressmann
 * 23.01.2014
 */
class Core_Plugin_AccessControl extends Zend_Controller_Plugin_Abstract {
	
	protected $_auth;
	protected $_acl;
	
	/**
	 * setting authentication and acl
	 */
	public function __construct(Zend_Auth $auth, Zend_Acl $acl) {
		$this->_auth = $auth;
		$this->_acl  = $acl;
	}
	
	/**
	 * authenticate the current request and authenticate the user
	 * setting identity and credentials to the auth adapter and authenticate
	 * after success redirect to login controller
	 */
	public function routeStartup(Zend_Controller_Request_Abstract $request) {
		
		$session = new Zend_Session_Namespace('Core');
		
		if(!$this->_auth->hasIdentity() && $request->getPost('username') !== null && $request->getPost('password') !== null) {
			
			$filter = new Zend_Filter_StripTags();
			
			$username = $filter->filter($request->getPost('username'));
			$password = $filter->filter($request->getPost('password'));
			
			if (empty($username)) {
				$message = 'Bitte Benutzernamen angeben.';
			}
			elseif (empty($password)) {
				$message = 'Bitte Passwort angeben.';
			}
			else {
				$authAdapter = new Core_Plugin_AuthAdapter(true);
				$authAdapter->setIdentity($username);
				$authAdapter->setCredential($password);
				$result = $this->_auth->authenticate($authAdapter);
				
				if($result->isValid()) {
					
					$storage = $this->_auth->getStorage();
					$storage->write($authAdapter->getResultRowObject(null,'password'));
					
					$session->auth = $this->_auth->getIdentity();
					$session->auth->identity = $session->auth->getIdentity();
					
					// user is deleted
					if($session->auth->getActive() != '1') {
				    	Zend_Auth::getInstance()->clearIdentity();
						$this->_response->setRedirect('/login/index?ec=2');
					}
				}
			}
			
			if(isset($result) && !$result->isValid()) {
				$messages = $result->getMessages();
				$message = $messages[0];
			}
		} else {
			
			if($session->auth == null) {
				$session->auth = new Core_Model_Auth();
				$session->auth->role_id = 1;
				$session->auth->account = '/login';
			}
		}
	}
	
	/**
	 * setting default controller to request after checking identity
	 */
	public function preDispatch(Zend_Controller_Request_Abstract $request) {
		
		if($this->_auth->hasIdentity() && is_object($this->_auth->getIdentity())) {
			$role = $this->_auth->getIdentity()->role_id;
		} else {
			$role = Core_Plugin_Acl::ROLE_GUEST;
		}
		
		$module = $request->getModuleName();
		$action = $request->getActionName();
		// modular can be mapped here to controller or simmilar
		$resource = $module;
		
		if (!$this->_acl->isAllowed($role, $resource)) {
			if($this->_auth->hasIdentity()) {
				$request->setModuleName('default');
				$request->setControllerName('error');
				$request->setActionName('noAccess'); 
			} else {
				$authSession = new Zend_Session_Namespace('Core');
				$authSession->auth->params = $request->getParams();
				$request->setModuleName('default');
				$request->setControllerName('login');
				$request->setActionName('index');
			}
		}
	}
}
