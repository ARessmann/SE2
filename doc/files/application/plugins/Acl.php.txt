<?php
/**
 * ACL class for the creditserver with all possible user and rights
 */
class Core_Plugin_Acl extends Zend_Acl {
	
	protected static $_instance = null;
	
	const RESOURCE_GUEST = 'default';
	const RESOURCE_CUSTOMER = 'customer';
    const RESOURCE_DEVICE   = 'device';
    const RESOURCE_ACCOUNT_MANAGER = 'accountmanager';
	const RESOURCE_ADMIN = 'admin';
	
	const ROLE_GUEST = 1;
	const ROLE_CUSTOMER = 2;
    const ROLE_DEVICE = 3;
    const ROLE_ACCOUNT_MANAGER = 4;
	const ROLE_ADMIN = 5;
	
	/**
	 * setting resources, roles, and rights
	 */
	public function __construct() {
		
		//resources
		$this->addResource(self::RESOURCE_GUEST);
		$this->addResource(self::RESOURCE_CUSTOMER);
		$this->addResource(self::RESOURCE_DEVICE);
        $this->addResource(self::RESOURCE_ACCOUNT_MANAGER);
        $this->addResource(self::RESOURCE_ADMIN);
		
		//roles
		$this->addRole(new Zend_Acl_Role(self::ROLE_GUEST));
		$this->addRole(new Zend_Acl_Role(self::ROLE_CUSTOMER));
        $this->addRole(new Zend_Acl_Role(self::ROLE_DEVICE));
        $this->addRole(new Zend_Acl_Role(self::ROLE_ACCOUNT_MANAGER));
		$this->addRole(new Zend_Acl_Role(self::ROLE_ADMIN));
		
		//rules
		$this->allow(null, null);
        //Guest
		$this->deny(self::ROLE_GUEST, self::RESOURCE_CUSTOMER);
		$this->deny(self::ROLE_GUEST, self::RESOURCE_DEVICE);
        $this->deny(self::ROLE_GUEST, self::RESOURCE_ACCOUNT_MANAGER);
        $this->deny(self::ROLE_GUEST, self::RESOURCE_ADMIN);
        $this->allow(self::ROLE_GUEST, self::RESOURCE_GUEST);
        
		$this->deny(self::ROLE_CUSTOMER, self::RESOURCE_DEVICE);
        $this->deny(self::ROLE_CUSTOMER, self::RESOURCE_ACCOUNT_MANAGER);
        $this->deny(self::ROLE_CUSTOMER, self::RESOURCE_ADMIN);
        $this->allow(self::ROLE_CUSTOMER, self::RESOURCE_CUSTOMER);
        
        $this->deny(self::ROLE_DEVICE, self::RESOURCE_ACCOUNT_MANAGER);
        $this->deny(self::ROLE_DEVICE, self::RESOURCE_ADMIN);
        $this->deny(self::ROLE_DEVICE, self::RESOURCE_CUSTOMER);
		$this->allow(self::ROLE_DEVICE, self::RESOURCE_DEVICE);
        
        $this->deny(self::ROLE_ACCOUNT_MANAGER, self::RESOURCE_ADMIN);
        $this->deny(self::ROLE_ACCOUNT_MANAGER, self::RESOURCE_CUSTOMER);
        $this->deny(self::ROLE_ACCOUNT_MANAGER, self::RESOURCE_DEVICE);
        $this->allow(self::ROLE_ACCOUNT_MANAGER, self::RESOURCE_ACCOUNT_MANAGER);
        
        $this->allow(self::ROLE_ADMIN, self::RESOURCE_ADMIN);
	}
	
	/**
	 * get instance of ACL
	 * @return ACL instance
	 */
	public static function getInstance()
    {
        if (null === self::$_instance) {
            self::$_instance = new self();
        }

        return self::$_instance;
    }
}
