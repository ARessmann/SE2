

<script type="text/javascript">

	$(document).ready(function() {

		$('#csvExport').hide();

		if ($('#analysis_id').val() != "") {
			$('#csvExport').show();
		}
		
		$('#choose_event').change(function() {
			$('#doExport').val(0);
			$('#choose_filter').val(0);
			$('#choose_analysis').val(0);
			$('#action_frm').submit();		
		});
		$('#choose_filter').change(function(){
			$('#doExport').val(0);
			$('#choose_analysis').val(0);
			$('#action_frm').submit();
		});
		$('#choose_analysis').change(function(){
			$('#doExport').val(0);
			$('#action_frm').submit();
		});
		$('#csvExport').click(function() {
			$('#doExport').val(1);
			$('#action_frm').submit();
		});
		
	});
</script>
   
<form id="action_frm" action="map">
	<table width="100%">
		        	<colgroup>
		        	<col style="width:10%"/>
		        	<col style="width:10%"/>
		        	<col style="width:10%"/>
		        	<col style="width:60%"/>
		        	</colgroup>
	        		<tr>
	        		<td>
		        		<i class="icon-tasks"></i> <?= $this->translator->translate("tweet_choose_event"); ?>
		        	</td>
		        	<td>
		        		<i class="icon-tasks"></i> Filter
		        	</td>
		        	<td></td>
		        	<td></td>		        	
		        	</tr>
		        	
		        	<tr>
		        	<td>
		        		<select name="choose_event" name="choose_event" id="choose_event" size="1">
				    		<option value="0"><?= $this->translator->translate("view_all"); ?></option>
				    		<?php if($this->events[1]['id'] != null) foreach ($this->events as $event) { ?>
			                	<option <?= ($event['id'] == $this->selectedChooseEvent) ? 'selected' : ''; ?> value="<?= $event['id']; ?>"><?= $event['event_title']; ?></option>
			           		<?php } ?>
				    	</select>
				    	<input type="hidden" id="event_id" value="<?= $this->selectedChooseEvent; ?>"/>
		        	</td>
		        	<td>
		        		<div class="input-prepend">
		        		
		        		<select name="choose_filter" name="choose_filter" id="choose_filter" size="1">
		        			<option value="0"></option>
				    		<?php if($this->selectedChooseEvent)
				    				foreach ($this->filter as $filter) { ?>
			                	<option <?= ($filter['id'] == $this->selectedChooseFilter) ? 'selected' : ''; ?> value="<?= $filter['id']; ?>"><?= $filter['filter_name']; ?></option>
			           		<?php } ?>
				    	</select>
				    	
				    	
				    	</div>
		        	</td>
		        	<td>
		        		<div class="input-prepend">
		        		
		        		<select name="choose_analysis" name="choose_analysis" id="choose_analysis" size="1">
		        			<option value="0"></option>
				    		<?php if($this->selectedChooseEvent)
				    				foreach ($this->analysis as $analysis) { ?>
			                	<option <?= ($analysis->getId() == $this->selectedChooseAnalysis) ? 'selected' : ''; ?> value="<?= $analysis->getId(); ?>"><?= $analysis->getAnalysisDate(); ?></option>
			           		<?php } ?>
				    	</select>
				    	<input type="hidden" id="analysis_id" value="<?= $this->selectedChooseAnalysis; ?>"/>
				    	
				    	</div>
		        	</td>
		        	<td align="right">
		        		<a href="#" id="csvExport" name="csvExport"><img src="/assets/img/csv_file.png"></a>
		        		<input type="hidden" id="doExport" name="doExport" value=""/>
		        	</td>
		        	
		        	</tr>
		        	
		        	</table>
		        	
	
</form>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>

<div style="width:100%;height:500px" id="gmeg_map_canvas"></div>

<script>

	var gmegMap, gmegMarker, gmegInfoWindow, gmegLatLng;

	function gmegInitializeMap(){
		gmegLatLng = new google.maps.LatLng(33.277148,8.05006);
		geocoder = new google.maps.Geocoder();
		
		gmegMap = new google.maps.Map(document.getElementById("gmeg_map_canvas"),
					  { zoom:2,
			  			center:gmegLatLng,
			  			scrollwheel: false,
			  		    navigationControl: false,
			  		    mapTypeControl: false,
			  		    scaleControl: false,
			  		    draggable: false,
			  			mapTypeId:google.maps.MapTypeId.ROADMAP
			  		  });


		var blueCircle = this.getCircle('blue');
		var redCircle = this.getCircle('red');
		var greenCircle = this.getCircle('green');
		  

		$.ajax({
			type: "POST",
		  	url: '../../../../api/getmapdata',
		  	data: { analyse_id: $('#analysis_id').val(),
		  			event_id: $('#event_id').val() }
		}).done(function(data) {
			for (var i = 0; i < data.length; i++) {
				var longitude 	= data[i]['longitude'];
				var latitude 	= data[i]['latitude'];
				var weight 		= data[i]['weight'];
				var location	= data[i]['location'];
				var pos			= null;
				
				if (longitude != null && latitude != null) {
					pos = new google.maps.LatLng(latitude, longitude);
					
					if (pos != null) {
						var circle = null;
						
						if (weight < -1) {
							circle = redCircle; 
						} else if (weight > 1) {
							circle = greenCircle;
						} else {
							circle = blueCircle; 
						}

						gmegMarker = new google.maps.Marker({
							map: gmegMap,
							position: pos,
							icon: circle
						});	
					}
				}
				/*else {
					geocoder.geocode({ 'address': location.toLowerCase() }, function(results, status) {
			      		if (status == google.maps.GeocoderStatus.OK) {
			        		//pos = results[0].geometry.location;

			        		if (pos != null) {
			        			var circle = null;
			        			
			        			if (weight < -1) {
			        				circle = redCircle; 
			        			} else if (weight > 1) {
			        				circle = greenCircle;
			        			} else {
			        				circle = blueCircle; 
			        			}

			        			gmegMarker = new google.maps.Marker({
			        				map: gmegMap,
			        				position: pos,
			        				icon: circle
			        			});	
			        		}
			      		}
			      	});
				}*/
			}
		});
	}

	function setMarker (weight, pos, gmegMap) {

		if (pos != null) {
			var circle = null;
			
			if (weight < -1) {
				circle = redCircle; 
			} else if (weight > 1) {
				circle = greenCircle;
			} else {
				circle = blueCircle; 
			}

			gmegMarker = new google.maps.Marker({
				map: gmegMap,
				position: pos,
				icon: circle
			});	
		}
		
	}
	
	function getCircle (color) {
		var circle ={
			    path: google.maps.SymbolPath.CIRCLE,
			    fillColor: color,
			    fillOpacity: .6,
			    scale: 5.5,
			    strokeColor: 'white',
			    strokeWeight: 1
			};

		return circle;
	}
	
	google.maps.event.addDomListener(window, "load", gmegInitializeMap);

</script>